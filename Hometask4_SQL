--схема БД: https://docs.google.com/document/d/1NVORWgdwlKepKq_b8SPRaSpraltxoMg2SIusTEN6mEQ/edit?usp=sharing
--colab/jupyter: https://colab.research.google.com/drive/1j4XdGIU__NYPVpv74vQa9HUOAkxsgUez?usp=sharing

--task1 (lesson5)
-- Компьютерная фирма: Сделать view (pages_all_products), в которой будет постраничная разбивка всех продуктов (не более двух продуктов на одной странице). Вывод: все данные из laptop, номер страницы, список всех страниц
create view pages_all_products as 
select *, 
case when rn % 2 = 0 then rn / 2 else rn / 2 + 1 end  as page_num, 
case when rn % 2 = 0 then 2 else 1 end as position
from (
  select *, row_number(*) over (order by price desc) as rn
  from laptop 
) a

--task2 (lesson5)
-- Компьютерная фирма: Сделать view (distribution_by_type), в рамках которого будет процентное соотношение всех товаров по типу устройства. Вывод: производитель, тип, процент (%)
create view distribution_by_type as 

select distinct  maker,type,dol from (
select *,row_number(*) over (),
count(*) over (partition by maker,type) as rn,
count(*) over () as aa
, 100*(count(*) over (partition by maker,type))/(count(*) over ())::numeric as dol
from product ) qq
--task3 (lesson5)
-- Компьютерная фирма: Сделать на базе предыдущенр view график - круговую диаграмму. Пример https://plotly.com/python/histograms/

--task4 (lesson5)
-- Корабли: Сделать копию таблицы ships (ships_two_words), но название корабля должно состоять из двух слов
create table ships_two_words as 
select * from ships where name like '% %'
--task5 (lesson5)
-- Корабли: Вывести список кораблей, у которых class отсутствует (IS NULL) и название начинается с буквы "S"
select o.ship from outcomes o 
full join classes c on c.class=o.ship
full join ships s on s.name=o.ship
where s.class is null and c.class is null
and o.ship like 'S%'
--task6 (lesson5)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'C' и три самых дорогих (через оконные функции). Вывести model
select model from (
select code,p.model,color,p.type,price from printer p
left join product pr on pr.model=p.model 
where maker='A' and price>(select avg(price) from printer pp
join product p2 on p2.model=pp.model
where maker='C'
)
union all
select code,model,color,type,price from
(select code,p.model,color,p.type,price, dense_rank() over (order by price desc) ,
row_number() over (order by price desc)
from printer  pr
join product p on p.model=pr.model) a
where  row_number<=3
) ww
